{"ast":null,"code":"var _jsxFileName = \"/Users/ahmed/Desktop/ReactJs/hello/src/components/counter/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      tgs: [\"1\", \"2\", \"3\"]\n    };\n  }\n  renderText() {\n    if (this.state.tgs.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are No text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 45\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.tgs.map(tgs => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tgs\n      }, tgs, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n  change() {\n    console.log(\"Incremetn Clicked\");\n    return this.state.count++;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Incremet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClass(),\n        children: [this.formatCuont(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.change,\n        className: \"btn btn-dark\",\n        children: \"Incremet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.tgs.length === 0 && \"Please create a new tag\", this.renderText()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n  getBadgeClass() {\n    let classess = \"m-2 text-\";\n    classess += this.state.count == 0 ? \"danger\" : \"info\";\n    return classess;\n  }\n  formatCuont() {\n    const {\n      count\n    } = this.state;\n    return count == 0 ? \"Zero\" : count;\n  }\n}\nexport default Counter;","map":{"version":3,"names":["React","Component","Counter","state","count","tgs","renderText","length","map","change","console","log","render","getBadgeClass","formatCuont","classess"],"sources":["/Users/ahmed/Desktop/ReactJs/hello/src/components/counter/counter.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n    tgs: [\"1\", \"2\", \"3\"],\n  };\n  renderText() {\n    if (this.state.tgs.length === 0) return <p>There are No text</p>;\n\n    return (\n      <ul>\n        {this.state.tgs.map((tgs) => (\n          <li key={tgs}>{tgs}</li>\n        ))}\n      </ul>\n    );\n  }\n  change() {\n    console.log(\"Incremetn Clicked\");\n    return this.state.count++;\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Incremet</h1>\n        <span className={this.getBadgeClass()}>{this.formatCuont()} </span>\n        <button onClick={this.change} className=\"btn btn-dark\">\n          Incremet\n        </button>\n        <div>\n          {this.state.tgs.length === 0 && \"Please create a new tag\"}\n          {this.renderText()}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  getBadgeClass() {\n    let classess = \"m-2 text-\";\n    classess += this.state.count == 0 ? \"danger\" : \"info\";\n    return classess;\n  }\n  formatCuont() {\n    const { count } = this.state;\n    return count == 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAEzC,MAAMC,OAAO,SAASD,SAAS,CAAC;EAAA;IAAA;IAAA,KAC9BE,KAAK,GAAG;MACNC,KAAK,EAAE,CAAC;MACRC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IACrB,CAAC;EAAA;EACDC,UAAU,GAAG;IACX,IAAI,IAAI,CAACH,KAAK,CAACE,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB;IAEhE,oBACE;MAAA,UACG,IAAI,CAACJ,KAAK,CAACE,GAAG,CAACG,GAAG,CAAEH,GAAG,iBACtB;QAAA,UAAeA;MAAG,GAATA,GAAG;QAAA;QAAA;QAAA;MAAA,QACb;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAET;EACAI,MAAM,GAAG;IACPC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAO,IAAI,CAACR,KAAK,CAACC,KAAK,EAAE;EAC3B;EACAQ,MAAM,GAAG;IACP,oBACE,QAAC,KAAK,CAAC,QAAQ;MAAA,wBACb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAM,SAAS,EAAE,IAAI,CAACC,aAAa,EAAG;QAAA,WAAE,IAAI,CAACC,WAAW,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS,eACnE;QAAQ,OAAO,EAAE,IAAI,CAACL,MAAO;QAAC,SAAS,EAAC,cAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE7C,eACT;QAAA,WACG,IAAI,CAACN,KAAK,CAACE,GAAG,CAACE,MAAM,KAAK,CAAC,IAAI,yBAAyB,EACxD,IAAI,CAACD,UAAU,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACd;IAAA;MAAA;MAAA;MAAA;IAAA,QACS;EAErB;EAEAO,aAAa,GAAG;IACd,IAAIE,QAAQ,GAAG,WAAW;IAC1BA,QAAQ,IAAI,IAAI,CAACZ,KAAK,CAACC,KAAK,IAAI,CAAC,GAAG,QAAQ,GAAG,MAAM;IACrD,OAAOW,QAAQ;EACjB;EACAD,WAAW,GAAG;IACZ,MAAM;MAAEV;IAAM,CAAC,GAAG,IAAI,CAACD,KAAK;IAC5B,OAAOC,KAAK,IAAI,CAAC,GAAG,MAAM,GAAGA,KAAK;EACpC;AACF;AAEA,eAAeF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}